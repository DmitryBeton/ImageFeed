//
//  ProfileLogoutService.swift
//  ImageFeed
//
//  Created by –î–º–∏—Ç—Ä–∏–π –ß–∞–ª–æ–≤ on 14.10.2025.
//

import Foundation
import WebKit

final class ProfileLogoutService {
    // MARK: - Singleton
    static let shared = ProfileLogoutService()
    private init() { }
    
    // MARK: - Public methods
    func logout() {
        cleanCookies()
        
        ImagesListService.shared.cleanImagesListService()
        ProfileImageService.shared.cleanProfileImageService()
        ProfileService.shared.cleanProfileService()
        
        OAuth2TokenStorage.shared.token = nil
        
        print("üö™ Leave from profile")
        switchToSplashViewController()
    }
    
    // MARK: - Private methods
    private func cleanCookies() {
        // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—É–∫–∏ –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        HTTPCookieStorage.shared.removeCookies(since: Date.distantPast)
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        WKWebsiteDataStore.default().fetchDataRecords(ofTypes: WKWebsiteDataStore.allWebsiteDataTypes()) { records in
            // –ú–∞—Å—Å–∏–≤ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π —É–¥–∞–ª—è–µ–º –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
            records.forEach { record in
                WKWebsiteDataStore.default().removeData(ofTypes: record.dataTypes, for: [record], completionHandler: {})
            }
        }
    }
    
    private func switchToSplashViewController() {
        print("üéØ Switching to SplashViewController")
        guard let window = UIApplication.shared.windows.first else {
            print("‚ùå No window found!")
            assertionFailure("Invalid window configuration")
            return
        }
        let splashViewController = SplashViewController()
        print("‚úÖ SplashViewController created successfully")
        window.rootViewController = splashViewController
    }
}
